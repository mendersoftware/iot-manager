variables:
  DOCKER_REPOSITORY: mendersoftware/iot-manager
  MULTIPLATFORM_BUILD: "true"
  MULTIPLATFORM_PLATFORMS: "linux/amd64,linux/arm64"

stages:
  - test_prep
  - test
  - build
  - publish
  - version-bump

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-lint.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-unittests.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-acceptance.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-apidocs.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-build.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

test:unit:
  variables:
    IOT_MANAGER_MONGO: mongo

test:govendor-check:
  variables:
    GOLANG_VERSION: '1.18'

test:acceptance_tests:
  stage: test
  needs: []
  rules:
    - if: '$CI_COMMIT_TAG =~ /^saas-[a-zA-Z0-9.]+$/'
      when: never
    - when: on_success
  tags:
    - hetzner-amd-beefy
  image: docker:23.0.4-alpine3.17
  services:
    - name: docker:23.0.6-dind-alpine3.17
      alias: docker
  before_script:
    - apk add docker-compose make
  script:
    - rm -f tests/coverage*.txt
    - make acceptance-tests
  artifacts:
    expire_in: 2w
    paths:
      - tests/acceptance.*
      - tests/coverage-acceptance.txt
    when: always

# excludes non multiplatform build job
build:docker:
  rules:
    - when: never

# excludes non multiplatform build job
publish:image:
  rules:
    - when: never

# excludes non multiplatform job
publish:image:saas:
  rules:
    - when: never

# excludes non multiplatform build job
publish:image:mender:
  rules:
    - when: never

#
# Alvaldi Helm Rolling release
#
.trigger:alvaldi-helm-version-bump:
  stage: version-bump
  allow_failure: true
  trigger:
    project: Northern.tech/NorthernTechHQ/alvaldi-helm
    strategy: depend
  resource_group: alvaldi-helm
  variables:
    SYNC_CONTAINER_NAME: $CONTAINER_NAME
    SYNC_IMAGE_TAG: $DOCKER_PUBLISH_COMMIT_TAG
    CONTAINER: iotManager
    DOCKER_PUBLISH_COMMIT_TAG: ${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}
    GITHUB_HELM_REPO: "github.com/NorthernTechHQ/alvaldi-helm.git"
    CHART_DIR: "alvaldi"

trigger:alvaldi-helm-version-bump:staging:
  extends:
    - .trigger:alvaldi-helm-version-bump
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(staging)$/
  variables:
    SYNC_ENVIRONMENT: staging
    HELM_PATCH_VERSION: ${CI_PIPELINE_ID}-staging # pre-release version for trigger staging only deploy

trigger:alvaldi-helm-version-bump:prod:
  extends:
    - .trigger:alvaldi-helm-version-bump
  rules:
    - if: '$CI_COMMIT_TAG =~ /^saas-[a-zA-Z0-9.]+$/'
      when: manual
  variables:
    SYNC_ENVIRONMENT: prod
    HELM_PATCH_VERSION: ${CI_PIPELINE_ID}
    DOCKER_PUBLISH_COMMIT_TAG: ${CI_COMMIT_REF_NAME}

test:validate-open-api:
  allow_failure: false

#
# Mender Helm Rolling release
#
.trigger:mender-helm-version-bump:
  stage: version-bump
  allow_failure: true
  trigger:
    project: Northern.tech/Mender/mender-helm
    strategy: depend
  resource_group: mender-helm
  variables:
    SYNC_CONTAINER_NAME: $CONTAINER_NAME
    SYNC_IMAGE_TAG: $DOCKER_PUBLISH_COMMIT_TAG
    CONTAINER: iot_manager
    DOCKER_PUBLISH_COMMIT_TAG: ${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}
    GITHUB_HELM_REPO: "github.com/mendersoftware/mender-helm.git"
    CHART_DIR: "mender"

trigger:mender-helm-version-bump:staging:
  extends:
    - .trigger:mender-helm-version-bump
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(staging)$/
  variables:
    SYNC_ENVIRONMENT: staging
    HELM_PATCH_VERSION: ${CI_PIPELINE_ID}-staging # pre-release version for trigger staging only deploy

trigger:mender-helm-version-bump:prod:
  extends:
    - .trigger:mender-helm-version-bump
  rules:
    - if: '$CI_COMMIT_TAG =~ /^saas-[a-zA-Z0-9.]+$/'
      when: manual
  variables:
    SYNC_ENVIRONMENT: prod
    HELM_PATCH_VERSION: ${CI_PIPELINE_ID}
    DOCKER_PUBLISH_COMMIT_TAG: ${CI_COMMIT_REF_NAME}
